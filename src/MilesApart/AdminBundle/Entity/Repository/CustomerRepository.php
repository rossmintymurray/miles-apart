<?php

namespace MilesApart\AdminBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerRepository extends EntityRepository
{
	public function findAllCustomers(){
        return $this->getEntityManager()
        ->createQuery('
            SELECT c FROM MilesApartAdminBundle:Customer c 
            LEFT OUTER JOIN c.personal_customer pc
            LEFT OUTER JOIN c.business_customer bc
            LEFT OUTER JOIN bc.business_customer_representative bcr
            
            ORDER BY pc.personal_customer_surname ASC, bcr.business_customer_representative_surname ASC

            ')
       
        
        ->getResult();
    }

	public function findBrs($customer_name, $customer_email, $business_name){
        return $this->getEntityManager()
        ->createQuery('
            SELECT c FROM MilesApartAdminBundle:Customer c 
            LEFT  JOIN c.personal_customer pc
            LEFT  JOIN c.business_customer bc
            
            
            WHERE pc.personal_customer_first_name LIKE :customer_name
            

            ')
        ->setParameter('customer_name', '%'.$customer_name.'%')
        
        ->getResult();
    }

    //Full version
    public function findByLetters($customer_name, $customer_email, $business_name){
    	//Set indivcators
    	$cnp = false;
    	$cep = false;
    	$bnp = false;
    	//Generate query based on values provided
    	$query_string = "
    		SELECT c FROM MilesApartAdminBundle:Customer c 
            LEFT  JOIN c.personal_customer pc
            LEFT  JOIN c.business_customer bc
            LEFT  JOIN bc.business_customer_representative bcr
            
            ";

        if($customer_name != null || $customer_name != "") {
        	$query_string .= "WHERE CONCAT(CONCAT(pc.personal_customer_first_name, ' '), pc.personal_customer_surname) LIKE :customer_name
            OR CONCAT(CONCAT(bcr.business_customer_representative_first_name, ' '), bcr.business_customer_representative_surname) LIKE :customer_name
            ";
            $cnp = true;
        }

        if($customer_email != null || $customer_email != "") {
        	$query_string .= "WHERE  pc.personal_customer_email_address LIKE :customer_email
            OR bcr.business_customer_representative_email_address LIKE :customer_email";
            $cep = true;
        }

        if($business_name != null || $business_name != "") {
        	$query_string .= "WHERE  bc.business_customer_name LIKE :business_name";
        	$bnp = true;
        }

        //Add order by 
        $query_string .= " ORDER BY pc.personal_customer_surname ASC, bcr.business_customer_representative_surname ASC";

        $full_query = $this->getEntityManager()->createQuery($query_string);

        //Add parameters if they are required 
        if($cnp) {
        	$full_query->setParameter('customer_name','%'.$customer_name.'%');
        }
        if($cep) {
        	$full_query->setParameter('customer_email','%'.$customer_email.'%');
        }
        if($bnp) {
        	$full_query->setParameter('business_name','%'.$business_name.'%');
        }
        
       
        return $full_query->getResult();


    }
}
