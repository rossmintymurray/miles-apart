<?php

namespace MilesApart\AdminBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductTransferRequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductTransferRequestRepository extends EntityRepository
{
	
	//Check the products for array match. (For CSV import)
    public function findExistingTransferRequestProducts($transfer_request_id)
    {
    	//Find the id of the most recent incomplete transfer request
        //Check if there is a value for product id.
        
                $query = $this->getEntityManager()
                        ->createQuery('
                            SELECT pp.product_price_value, p.product_name, ptr.product_transfer_request_qty, p.product_supplier_code,
                            p.product_barcode, s.supplier_name FROM MilesApartAdminBundle:ProductTransferRequest ptr
                            JOIN ptr.product p
                            JOIN p.product_price pp
                            LEFT OUTER JOIN p.product_supplier ps
                            LEFT OUTER JOIN ps.supplier s
                            WHERE ptr.transfer_request = :transfer_request_id
                            ORDER BY ptr.product_transfer_request_date_created DESC
                            ')
                        ->setParameter('transfer_request_id', $transfer_request_id)
                        ;
            
        return $query
                  ->getResult(); 
   }

   //Check the products for array match. (For CSV import)
    public function findDuplicateProductTransferRequest($transfer_request_id, $product_id)
    {
        //Find the id of the most recent incomplete transfer request
        //Check if there is a value for product id.
        
                $query = $this->getEntityManager()
                        ->createQuery('
                            SELECT p, ptr FROM MilesApartAdminBundle:ProductTransferRequest ptr
                            JOIN ptr.product p
                            WHERE ptr.transfer_request = :transfer_request_id
                            AND p.id = :product_id
                            ORDER BY ptr.product_transfer_request_date_created DESC
                            ')
                        ->setParameter('transfer_request_id', $transfer_request_id)
                        ->setParameter('product_id', $product_id)
                        ;
            
        return $query
                  ->getResult(); 
   }
}
